# Generated by Django 4.2.10 on 2024-05-06 01:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import smart_selects.db_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('saude', '0001_initial'),
        ('comum', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CID',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('codigo', models.CharField(max_length=20)),
                ('nome', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'CID',
                'verbose_name_plural': 'CIDs',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Convênio',
                'verbose_name_plural': 'Convênios',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Codigo')),
            ],
            options={
                'verbose_name': 'Procedimento',
                'verbose_name_plural': 'Procedimentos',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Profissao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('codigo', models.CharField(max_length=6, unique=True, verbose_name='Código da profissão')),
                ('titulo', models.CharField(max_length=150, verbose_name='Título da profissão')),
            ],
            options={
                'verbose_name': 'Profissão',
                'verbose_name_plural': 'Profissões',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TipoClinica',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('descricao', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Tipo Clinica',
                'verbose_name_plural': 'Tipo Clinica',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TipoExame',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=150, unique=True, verbose_name='Nome')),
                ('tipo', models.SmallIntegerField(blank=True, choices=[(0, 'LABORATÓRIO'), (1, 'IMAGEM')], null=True, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Tipo de Exames',
                'verbose_name_plural': 'Tipos de Exames',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TipoHistoriaClinica',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('situacao', models.CharField(choices=[('ATIVO', 'ATIVO'), ('INATIVO', 'INATIVO')], default='ATIVO', max_length=7, verbose_name='Situação')),
            ],
            options={
                'verbose_name': 'Tipos de História Clínica',
                'verbose_name_plural': 'Tipo de História Clínica',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TipoPosologia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('antes_da_refeicao', models.BooleanField(default=False, verbose_name='Antes da refeição')),
                ('pos_refeicao', models.BooleanField(default=False, verbose_name='Pós refeição')),
                ('somente_nas_refeicoes', models.BooleanField(default=False, verbose_name='Somente nas refeições')),
            ],
            options={
                'verbose_name': 'Tipos de Posologia',
                'verbose_name_plural': 'Tipo de Posologia',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Transporte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome_transporte', models.CharField(max_length=50, unique=True, verbose_name='Nome do transporte')),
                ('situacao', models.CharField(choices=[('ATIVO', 'ATIVO'), ('INATIVO', 'INATIVO')], default='ATIVO', max_length=7, verbose_name='Situação')),
            ],
            options={
                'verbose_name': 'Transporte',
                'verbose_name_plural': 'Transportes',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UnidadeSetor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Código')),
                ('situacao', models.SmallIntegerField(choices=[(0, 'Ativo'), (1, 'Inativado')], default=0, verbose_name='Situação')),
                ('sigla', models.CharField(blank=True, max_length=15, null=True, verbose_name='Sigla')),
                ('recebe_paciente', models.BooleanField(default=False, verbose_name='Recebe paciente')),
                ('tipo', models.SmallIntegerField(blank=True, choices=[(0, 'RECEPÇÃO'), (1, 'URGÊNCIA'), (2, 'CONSULTÓRIO'), (3, 'ENFERMARIA'), (4, 'INTERNAÇÃO'), (5, 'FARMACIA'), (6, 'NUTRIÇÃO'), (7, 'LABORATÓRIO'), (8, 'CENTRO CIRÚRGICO'), (9, 'MATERNIDADE'), (10, 'OBSTRETICIA'), (11, 'PEDIATRIA'), (12, 'RADIOLOGIA'), (13, 'RH'), (14, 'ADMINISTRATIVO')], null=True, verbose_name='Tipo')),
                ('superior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude_cadastro.unidadesetor', verbose_name='Unidade Superior')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de Saúde')),
            ],
            options={
                'verbose_name': 'Unidade Setor',
                'verbose_name_plural': 'Unidades setores',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TipoClassificacaoRisco',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('tipo', models.SmallIntegerField(choices=[(0, 'NÃO URGENTE'), (1, 'POUCO URGENTE'), (2, 'URGENTE'), (3, 'MUITO URGENTE'), (4, 'EMERGÊNCIA')], verbose_name='Tipo de Classificacao de Risco')),
                ('cor', models.SmallIntegerField(choices=[(0, 'AZUL'), (1, 'VERDE'), (2, 'AMARELO'), (3, 'VERMELHO'), (4, 'LARANJA'), (5, 'PRETO'), (6, 'ROXO'), (7, 'CINZA')], null=True, verbose_name='Cor da Classificação')),
                ('situacao', models.SmallIntegerField(choices=[(0, 'ATIVO'), (1, 'INATIVO')], default=0, verbose_name='Situação')),
                ('ordem', models.IntegerField(verbose_name='Ordem')),
                ('tempo_atendimento', models.DurationField(blank=True, null=True, verbose_name='Tempo para atendimento')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de Saúde')),
            ],
            options={
                'verbose_name': 'Tipo de Classificação de Risco',
                'verbose_name_plural': 'Tipos de Classificações de Risco',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome_sala', models.CharField(max_length=50, verbose_name='Nome da sala')),
                ('situacao', models.SmallIntegerField(choices=[(0, 'Ativo'), (1, 'Inativo'), (2, 'Indisponível'), (3, 'Manutenção')], default=0, verbose_name='Situação')),
                ('unidade_setor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saude_cadastro.unidadesetor', verbose_name='Unidade Setor')),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome_profissional', models.CharField(help_text='Nome do profissional', max_length=100, verbose_name='Nome do Profissional')),
                ('tipo_profissional', models.SmallIntegerField(choices=[(0, 'DESENVOLVEDOR'), (1, 'RECEPCIONISTA'), (2, 'MÉDICO'), (3, 'ENFERMEIRO(A)'), (4, 'RADIOLOGISTA'), (5, 'FARMACÊUTICO'), (6, 'TERAPEUTA'), (7, 'NUTRICIONISTA'), (8, 'ADMINISTRADO'), (9, 'SUPORTE')])),
                ('coren', models.CharField(blank=True, help_text='COREN', max_length=7, verbose_name='COREN')),
                ('crm', models.CharField(blank=True, help_text='CRM', max_length=6, verbose_name='CRM')),
                ('cns', models.CharField(blank=True, help_text='CNS', max_length=15, verbose_name='CNS')),
                ('cbo', models.CharField(blank=True, help_text='CBO', max_length=6, verbose_name='CBO')),
                ('cpf', models.CharField(error_messages={'unique': 'Um profissional com esse CPF já foi cadastrado.'}, max_length=14, unique=True, verbose_name='CPF')),
                ('endereco', models.CharField(help_text='Nome da rua, travessa ou avenida', max_length=200, verbose_name='Endereço')),
                ('numero', models.PositiveIntegerField(blank=True, help_text='Número', null=True, validators=[django.core.validators.MaxValueValidator(9999999999999)], verbose_name='Número')),
                ('complemento', models.CharField(blank=True, help_text='Complemento torre, sala etc', max_length=200, verbose_name='Complemento')),
                ('bairro', models.CharField(help_text='Nome do barro', max_length=200, verbose_name='Bairro')),
                ('cep', models.CharField(blank=True, max_length=14, verbose_name='CEP')),
                ('telefone_1', models.CharField(error_messages={'unique': 'Este número de telefone já está associado a uma conta existente.'}, help_text='Telefone 1', max_length=15, unique=True, verbose_name='Telefone 1')),
                ('telefone_2', models.CharField(blank=True, error_messages={'unique': 'Este número de telefone já está associado a uma conta existente.'}, help_text='Telefone 2', max_length=15, verbose_name='Telefone 2')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Uma email idêntico já foi cadastrado.'}, max_length=254, unique=True, verbose_name='E-mail')),
                ('situacao', models.CharField(choices=[['ATIVO', 'ATIVO'], ['INATIVO', 'INATIVO']], default='ATIVO', max_length=7, verbose_name='Situação')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comum.estado')),
                ('municipio', smart_selects.db_fields.ChainedForeignKey(chained_field='estado', chained_model_field='estado', on_delete=django.db.models.deletion.CASCADE, to='comum.municipio')),
                ('unidades_saude', models.ManyToManyField(to='saude.unidadesaude', verbose_name='Unidades de Saúde')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profissional',
                'verbose_name_plural': 'Profissionais',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PainelChamada',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug')),
                ('setores', models.ManyToManyField(to='saude_cadastro.unidadesetor', verbose_name='Setores')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de Saúde')),
            ],
            options={
                'verbose_name': 'Painel Chamado',
                'verbose_name_plural': 'Paineis de Chamados',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Exame',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=150, verbose_name='Exame')),
                ('tipo_exame', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saude_cadastro.tipoexame', verbose_name='Tipo de Exames')),
            ],
            options={
                'verbose_name': 'Exame',
                'verbose_name_plural': 'Exames',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DestinoObito',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome_destino_obito', models.CharField(max_length=50, verbose_name='Destino de Óbito')),
                ('situacao', models.CharField(choices=[('ATIVO', 'ATIVO'), ('INATIVO', 'INATIVO')], default='ATIVO', max_length=7, verbose_name='Situação')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de Saúde')),
            ],
            options={
                'verbose_name': 'Destino de Óbito',
                'verbose_name_plural': 'Destinos de Óbito',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
