# Generated by Django 4.2.10 on 2024-05-06 01:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CargoEmprego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=40)),
                ('nome_amigavel', models.CharField(blank=True, max_length=40, verbose_name='Nome amigável')),
                ('descricao_sumaria', models.TextField(blank=True, verbose_name='Descrição Sumária do Cargo')),
                ('excluido', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Cargo Emprego',
                'verbose_name_plural': 'Cargos de Emprego',
                'db_table': 'cargo_emprego',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name': 'Função',
                'verbose_name_plural': 'Funções',
                'db_table': 'funcao',
            },
        ),
        migrations.CreateModel(
            name='JornadaTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=40)),
                ('carga_horaria', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NivelEscolaridade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=45)),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Nível de Escolaridade',
                'verbose_name_plural': 'Níveis de Escolaridade',
                'db_table': 'nivel_escolaridade',
            },
        ),
        migrations.CreateModel(
            name='PessoaFisica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_usual', models.CharField(blank=True, help_text='O nome apresentado no crachá', max_length=30, verbose_name='Nome Usual')),
                ('nome_social', models.CharField(blank=True, max_length=200, verbose_name='Nome Social')),
                ('nome_registro', models.CharField(blank=True, max_length=200, verbose_name='Nome de Registro')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Uma email idêntico já foi cadastrado.'}, max_length=254, unique=True, verbose_name='E-mail Principal')),
                ('email_secundario', models.EmailField(blank=True, help_text='E-mail utilizado para recuperação de senha.', max_length=254, verbose_name='E-mail Secundário')),
                ('website', models.URLField(blank=True)),
                ('cpf', models.CharField(error_messages={'unique': 'Uma pessoa física com esse cpf já foi cadastrado.'}, max_length=14, unique=True, verbose_name='CPF')),
                ('sexo', models.CharField(choices=[['M', 'Masculino'], ['F', 'Feminino']], max_length=1, null=True)),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[['A', 'A'], ['B', 'B'], ['AB', 'AB'], ['O', 'O']], max_length=2, null=True, verbose_name='Grupo Sanguíneo')),
                ('fator_rh', models.CharField(blank=True, choices=[['+', '+'], ['-', '-']], max_length=8, null=True, verbose_name='Fator RH')),
                ('titulo_numero', models.CharField(blank=True, max_length=13, null=True)),
                ('titulo_zona', models.CharField(blank=True, max_length=3, null=True)),
                ('titulo_secao', models.CharField(blank=True, max_length=4, null=True)),
                ('titulo_data_emissao', models.DateField(null=True)),
                ('rg', models.CharField(max_length=20, null=True, verbose_name='RG')),
                ('rg_orgao', models.CharField(max_length=10, null=True)),
                ('rg_data', models.DateField(null=True)),
                ('nascimento_data', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('nome_mae', models.CharField(max_length=100, null=True, verbose_name='Nome da Mãe')),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pai')),
                ('cnh_registro', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_categoria', models.CharField(blank=True, max_length=10, null=True)),
                ('cnh_emissao', models.DateField(blank=True, null=True)),
                ('cnh_validade', models.DateField(blank=True, null=True)),
                ('ctps_numero', models.CharField(blank=True, max_length=20, null=True)),
                ('ctps_data_prim_emprego', models.DateField(blank=True, null=True)),
                ('ctps_serie', models.CharField(blank=True, max_length=10, null=True)),
                ('pis_pasep', models.CharField(blank=True, max_length=20, null=True, verbose_name='PIS / PASEP')),
                ('pagto_agencia', models.CharField(blank=True, max_length=20, null=True, verbose_name='Agência')),
                ('pagto_ccor', models.CharField(blank=True, max_length=20, null=True, verbose_name='Conta')),
                ('pagto_ccor_tipo', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo')),
                ('nacionalidade', models.IntegerField(choices=[[1, 'Brasileiro Nato'], [2, 'Brasileiro Naturalizado'], [3, 'Equiparado'], [4, 'Estrangeiro']], null=True, verbose_name='Nacionalidade')),
                ('lattes', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PessoaJuridica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(help_text='Nome da razão social', max_length=200, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(help_text='Nome Fantasia do fornecedor', max_length=200, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(error_messages={'unique': 'Uma pessoa jurídica com esse cnpj já foi cadastrado.'}, max_length=18, unique=True, verbose_name='CNPJ')),
                ('ramo_de_atividade', models.CharField(help_text='Ramo de atividade', max_length=200, verbose_name='Ramo de atividade')),
                ('nome_do_representante_legal', models.CharField(max_length=200, verbose_name='Nome do representante legal')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Uma email idêntico já foi cadastrado.'}, max_length=254, unique=True, verbose_name='E-mail Principal da Empresa')),
                ('inscricao_estadual', models.CharField(max_length=9, verbose_name='Inscrição Estadual')),
                ('website', models.URLField()),
                ('nome_contato_1', models.CharField(help_text='Descrição do contato 1', max_length=200, verbose_name='Nome Contato 1')),
                ('telefone_contato_1', models.CharField(help_text='Número do telefone do contato 1', max_length=15, verbose_name='Telefone Contato 1')),
                ('email_contato_1', models.EmailField(blank=True, error_messages={'unique': 'Uma email idêntico já foi cadastrado.'}, max_length=254, unique=True, verbose_name='E-mail Contato 1')),
                ('funcao_contato_1', models.CharField(help_text='Exemplo: Diretor de Marketing', max_length=200, verbose_name='Função Contato 1')),
                ('nome_contato_2', models.CharField(help_text='Descrição do contato 2', max_length=200, verbose_name='Nome Contato 2')),
                ('telefone_contato_2', models.CharField(help_text='Número do telefone do contato 2', max_length=15, verbose_name='Telefone Contato 2')),
                ('email_contato_2', models.EmailField(blank=True, error_messages={'unique': 'Uma email idêntico já foi cadastrado.'}, max_length=254, unique=True, verbose_name='E-mail Contato 2')),
                ('funcao_contato_2', models.CharField(help_text='Exemplo: Diretor de Marketing', max_length=200, verbose_name='Função Contato 2')),
                ('descricao', models.CharField(help_text='Nome filial, unidade para identificação de mais um endereço', max_length=200, verbose_name='Descrição')),
                ('cep', models.CharField(max_length=14, unique=True, verbose_name='CEP')),
                ('endereco', models.CharField(help_text='Nome da rua, travessa ou avenida', max_length=200, verbose_name='Endereço')),
                ('numero', models.PositiveIntegerField(blank=True, help_text='Número', null=True, validators=[django.core.validators.MaxValueValidator(9999999999999)], verbose_name='Número')),
                ('complemento', models.CharField(blank=True, help_text='complemento torre, sala etc', max_length=200, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(help_text='nome do barro', max_length=200, verbose_name='Bairro')),
            ],
        ),
        migrations.CreateModel(
            name='RegimeJuridico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_regime', models.CharField(db_index=True, max_length=2, null=True)),
                ('sigla', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'regime_juridico',
            },
        ),
        migrations.CreateModel(
            name='Servidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='Matrícula')),
                ('num_processo_aposentadoria', models.CharField(blank=True, max_length=30, null=True)),
                ('numerador_prop_aposentadoria', models.CharField(blank=True, max_length=20, null=True)),
                ('denominador_prop_aposentadoria', models.CharField(blank=True, max_length=20, null=True)),
                ('data_inicio_servico_publico', models.DateField(blank=True, null=True)),
                ('data_inicio_exercicio_na_instituicao', models.DateField(blank=True, null=True)),
                ('data_posse_na_instituicao', models.DateField(blank=True, null=True)),
                ('data_posse_no_cargo', models.DateField(blank=True, null=True)),
                ('data_inicio_exercicio_no_cargo', models.DateField(blank=True, null=True)),
                ('data_fim_servico_na_instituicao', models.DateField(blank=True, null=True)),
                ('email_institucional', models.EmailField(blank=True, max_length=254, verbose_name='Email Institucional')),
                ('alterado_em', models.DateTimeField(auto_now=True)),
                ('cargo_emprego_data_ocupacao', models.DateField(blank=True, null=True)),
                ('cargo_emprego_data_saida', models.DateField(blank=True, null=True)),
                ('funcao_data_ocupacao', models.DateField(blank=True, null=True)),
                ('funcao_data_saida', models.DateField(blank=True, null=True)),
                ('setor_lotacao_data_ocupacao', models.DateField(null=True)),
                ('titulo_secao', models.CharField(blank=True, max_length=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Situacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, null=True, unique=True)),
                ('descricao', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name': 'Situação',
                'verbose_name_plural': 'Situações',
                'db_table': 'situacao',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='SetorUnidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situacao_setor', models.SmallIntegerField(choices=[(0, 'ATIVO'), (1, 'INATIVO')], default=0, verbose_name='Situação')),
                ('recebe_paciente', models.BooleanField(default=False, verbose_name='Recebe paciente')),
                ('nome_setor', models.CharField(error_messages={'unique': 'Um setor com esse nome já existe.'}, max_length=200, unique=True, verbose_name='Nome')),
                ('sigla_setor', models.CharField(error_messages={'unique': 'Um setor com essa sigla já existe.'}, max_length=15, unique=True, verbose_name='Sigla')),
                ('codigo_setor', models.CharField(error_messages={'unique': 'Um setor com esse código já existe.'}, max_length=20, unique=True, verbose_name='Código')),
                ('setor_superior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='rh.setorunidade', verbose_name='Setor Superior')),
            ],
            options={
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
            },
        ),
    ]
