# Generated by Django 4.2.10 on 2024-05-25 23:26

from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('saude', '0006_unidadesaude_logo'),
        ('saude_cadastro', '0002_alter_profissional_tipo_profissional'),
        ('saude_farmacia', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='insumo',
            name='quantidade',
            field=models.PositiveIntegerField(default=0, verbose_name='Quantidade'),
        ),
        migrations.AddField(
            model_name='medicamento',
            name='quantidade',
            field=models.PositiveIntegerField(default=0, verbose_name='Quantidade'),
        ),
        migrations.AddField(
            model_name='produto',
            name='quantidade',
            field=models.PositiveIntegerField(default=0, verbose_name='Quantidade'),
        ),
        migrations.AlterField(
            model_name='farmacia',
            name='unidade_saude',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de saúde'),
        ),
        migrations.AlterField(
            model_name='insumo',
            name='estoque_minimo_geral',
            field=models.PositiveIntegerField(null=True, verbose_name='Estoque mínimo geral'),
        ),
        migrations.AlterField(
            model_name='insumorequisitado',
            name='unidade_insumo',
            field=models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7),
        ),
        migrations.AlterField(
            model_name='medicamento',
            name='estoque_minimo_geral',
            field=models.PositiveIntegerField(verbose_name='Estoque mínimo geral'),
        ),
        migrations.AlterField(
            model_name='medicamentorequisitado',
            name='unidade_medicamento',
            field=models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7),
        ),
        migrations.AlterField(
            model_name='produto',
            name='estoque_minimo_geral',
            field=models.PositiveIntegerField(verbose_name='Estoque mínimo geral'),
        ),
        migrations.AlterField(
            model_name='produtorequisitado',
            name='unidade_produto',
            field=models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7),
        ),
        migrations.CreateModel(
            name='ProdutoEntrada',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('quantidade_produto', models.IntegerField(blank=True)),
                ('unidade_produto', models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7)),
                ('numero_lote_produto', models.CharField(max_length=50)),
                ('data_vencimento_produto', models.DateField()),
                ('produto', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='saude_farmacia.produto')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de saúde')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MedicamentoEntrada',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('quantidade_medicamento', models.IntegerField(blank=True)),
                ('unidade_medicamento', models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7)),
                ('numero_lote_medicamento', models.CharField(max_length=50)),
                ('data_vencimento_medicamento', models.DateField()),
                ('medicamento', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='saude_farmacia.medicamento')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de saúde')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InsumoEntrada',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('quantidade_insumo', models.IntegerField(blank=True)),
                ('unidade_insumo', models.CharField(blank=True, choices=[('Unidade', 'Unidade'), ('Caixa', 'Caixa')], max_length=7)),
                ('numero_lote_insumo', models.CharField(max_length=50)),
                ('data_vencimento_insumo', models.DateField()),
                ('insumo', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='saude_farmacia.insumo')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de saúde')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EntradaMaterialFarmacia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Registrado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('data_entrada', models.DateField()),
                ('numero_pedido', models.CharField(error_messages={'unique': 'Uma entrada com esse número de pedido já existe.'}, max_length=50, unique=True, verbose_name='N° Pedido')),
                ('tipo_entrada', models.IntegerField(choices=[(0, 'COMPRA'), (1, 'TRANSFERÊNCIA')], default=0)),
                ('fornecedor', models.CharField(max_length=200, verbose_name='Fornecedor')),
                ('numero_nota_fiscal', models.CharField(error_messages={'unique': 'Uma entrada com esse número de nota fiscal já existe.'}, max_length=50, unique=True, verbose_name='N° Nota Fiscal')),
                ('empenho', models.CharField(max_length=200, verbose_name='Empenho')),
                ('processo', models.CharField(error_messages={'unique': 'Uma entrada com esse processo já existe.'}, max_length=50, unique=True, verbose_name='Processo')),
                ('farmaceutico_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude_cadastro.profissional')),
                ('farmacia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saude_farmacia.farmacia')),
                ('insumo_entrada', models.ManyToManyField(blank=True, to='saude_farmacia.insumoentrada')),
                ('medicamento_entrada', models.ManyToManyField(blank=True, to='saude_farmacia.medicamentoentrada')),
                ('produto_entrada', models.ManyToManyField(blank=True, to='saude_farmacia.produtoentrada')),
                ('unidade_saude', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='saude.unidadesaude', verbose_name='Unidade de saúde')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
